@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 7%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    /* Apply gradient to html element - subtle blue aesthetic with texture */
    background: 
      linear-gradient(135deg, hsl(var(--background)) 0%, hsl(var(--background) / 0.85) 30%, hsl(210 40% 98% / 0.15) 60%, hsl(var(--background) / 0.9) 100%),
      radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.03) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.03) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.02) 0%, transparent 50%),
      repeating-linear-gradient(
        45deg,
        transparent,
        transparent 2px,
        rgba(255, 255, 255, 0.01) 2px,
        rgba(255, 255, 255, 0.01) 4px
      ) !important;
  }
  
  .dark html {
    /* Remove gradient in dark mode - use solid background */
    background: hsl(var(--background)) !important;
  }
  body {
    @apply bg-background text-foreground;
    font-family: 'Poppins', sans-serif;
    user-select: none;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
    /* Remove background from body since we're applying to html */
    background: transparent !important;
  }
}

/* Remove input outlines globally */
input:focus,
textarea:focus,
select:focus {
  outline: none !important;
  box-shadow: none !important;
}

/* Remove focus ring */
input:focus-visible,
textarea:focus-visible,
select:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}

/* Remove focus ring offset */
input:focus-visible:ring-offset-0,
textarea:focus-visible:ring-offset-0,
select:focus-visible:ring-offset-0 {
  outline: none !important;
  box-shadow: none !important;
}

/* Hide cursor when caret-transparent class is applied */
.caret-transparent {
  caret-color: transparent !important;
}

/* Ensure cursor is visible when typing */
input:not(.caret-transparent) {
  caret-color: auto !important;
}

/* Glass morphism utilities */
@layer utilities {
  .glass-morphism {
    background: rgba(255, 255, 255, 0.1) !important;
    backdrop-filter: blur(20px) !important;
    -webkit-backdrop-filter: blur(20px) !important;
    border: 1px solid rgba(255, 255, 255, 0.2) !important;
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37) !important;
  }
  
  .glass-morphism-dark {
    background: rgba(0, 0, 0, 0.1) !important;
    backdrop-filter: blur(20px) !important;
    -webkit-backdrop-filter: blur(20px) !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.5) !important;
  }
}

/* PWA and standalone mode styles */
.standalone-mode {
  /* Ensure full viewport usage in standalone mode */
  height: 100vh;
  height: 100dvh;
  overflow: hidden;
}

/* iOS Safari specific fixes for standalone mode */
@supports (-webkit-touch-callout: none) {
  .standalone-mode {
    /* Additional iOS standalone mode optimizations */
    -webkit-overflow-scrolling: touch;
  }
  
  /* iPhone touch optimizations */
  button {
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
  }
  
  /* Ensure filter buttons are responsive on iPhone */
  button[class*="touch-manipulation"] {
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }
  
  /* Prevent double-tap zoom on buttons */
  button, input, select, textarea {
    touch-action: manipulation;
  }
  
  /* Additional iOS optimizations */
  * {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  /* Optimize scrolling performance */
  .overflow-y-auto, .overflow-y-scroll {
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
  }
  
  /* Prevent text selection on interactive elements */
  button, [role="button"], .cursor-pointer {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
  }
  
  /* Optimize animations for iOS */
  .animate-slide-down, .animate-slide-up {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    will-change: transform;
  }
  
  /* Prevent iOS Safari from adding margins to body */
  body {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
  }
  
  /* Optimize input fields for iOS */
  input, textarea {
    -webkit-appearance: none;
    border-radius: 0;
  }
  
  /* Prevent iOS Safari from zooming on input focus */
  input[type="text"], input[type="email"], input[type="tel"], textarea {
    font-size: 16px;
  }
}

/* Prevent pull-to-refresh on mobile */
body {
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
  position: fixed;
  width: 100%;
  height: 100%;
  overflow: hidden;
  /* Keep the gradient background */
  background: linear-gradient(135deg, hsl(var(--background)) 0%, hsl(var(--background) / 0.3) 15%, hsl(210 40% 98% / 0.7) 35%, hsl(220 30% 96% / 0.6) 55%, hsl(230 20% 94% / 0.5) 75%, hsl(var(--background) / 0.2) 100%) !important;
  /* iPhone touch improvements */
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

.dark body {
  /* Remove gradient in dark mode - use solid background */
  background: hsl(var(--background)) !important;
}

/* Hide scrollbars in standalone mode */
.standalone-mode::-webkit-scrollbar {
  display: none;
}

/* Animations for smooth transitions */
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes content-change {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

@keyframes slide-down {
  from {
    opacity: 0;
    transform: translateY(-12px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes slide-down-bounce {
  from {
    opacity: 0;
    transform: translateY(-12px) scale(0.95);
  }
  60% {
    opacity: 1;
    transform: translateY(2px) scale(1.02);
  }
  80% {
    transform: translateY(-1px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes slide-up {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-8px);
  }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out;
}

.animate-fade-out {
  animation: fade-out 0.2s ease-in-out;
}

.animate-scale-in {
  animation: scale-in 0.3s ease-out;
}

.animate-content-change {
  animation: content-change 0.3s ease-in-out;
}

.animate-slide-down {
  animation: slide-down 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-slide-up {
  animation: slide-up 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Template animations for settings menu - faster and smoother */
@keyframes template-down {
  from {
    opacity: 0;
    transform: translateY(-8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes template-up {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-6px);
  }
}

.animate-template-down {
  animation: template-down 0.2s cubic-bezier(0.16, 1, 0.3, 1);
}

.animate-template-up {
  animation: template-up 0.15s cubic-bezier(0.16, 1, 0.3, 1);
}

/* Safe area support */
.pt-safe {
  padding-top: env(safe-area-inset-top);
}

.pb-safe {
  padding-bottom: env(safe-area-inset-bottom);
}

.pl-safe {
  padding-left: env(safe-area-inset-left);
}

.pr-safe {
  padding-right: env(safe-area-inset-right);
}

/* Settings Menu Screen Width Centering */
[data-radix-popper-content-wrapper][data-settings-menu="true"] {
  left: 50% !important;
  transform: translateX(-50%) !important;
  /* Position at the top edge of search input */
  top: calc(env(safe-area-inset-top) + 2.75rem) !important;
  position: fixed !important;
}

/* Flip Card Animations */
.flip-card {
  perspective: 1000px;
  transform-style: preserve-3d;
  position: relative;
  width: 100%;
  height: 100%;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.flip-card.flipped .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 1.5rem;
  overflow: hidden;
}

.flip-card-front {
  transform: rotateY(0deg);
}

.flip-card-back {
  transform: rotateY(180deg);
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
}

/* Mobile swipe hint */
.swipe-hint {
  position: absolute;
  top: 50%;
  right: 1rem;
  transform: translateY(-50%);
  opacity: 0.3;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

.swipe-hint.visible {
  opacity: 0.7;
}

/* Prevent progress bar bouncing */
.progress-bar-fixed {
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 50 !important;
  transform: translateZ(0);
  will-change: transform;
}

/* Prevent body scroll when progress bar is visible */
body.progress-bar-visible {
  overflow: hidden;
  position: fixed;
  width: 100%;
}

/* Prevent iOS context menu on long press */
* {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* Additional iOS performance optimizations */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

button, [role="button"], .no-select, .touch-manipulation {
  user-select: none;
  -webkit-user-select: none;
  -webkit-tap-highlight-color: transparent;
}

/* Allow text selection only for specific elements that need it */
input, textarea, [contenteditable] {
  -webkit-touch-callout: default;
  -webkit-user-select: text;
  -khtml-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

/* Prevent background scrolling when autocomplete is visible */
body.overflow-hidden {
  overflow: hidden !important;
  position: fixed !important;
  width: 100% !important;
  height: 100% !important;
  touch-action: none !important;
}

/* Prevent touch scrolling on main content when autocomplete is open */
.autocomplete-open .flex-1.overflow-hidden.min-h-0 {
  touch-action: none !important;
  overflow: hidden !important;
}

/* iOS Safari elastic scrolling prevention */
html {
  overscroll-behavior: none;
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

#root {
  height: 100dvh;
  overflow: hidden;
  overscroll-behavior: none;
}

/* Prevent elastic scrolling on specific containers */
.overflow-y-auto {
  -webkit-overflow-scrolling: touch;
}

/* CSV File Selector Button - No borders or outlines ever */
[data-radix-dropdown-trigger] button,
[data-radix-dropdown-trigger] button:focus,
[data-radix-dropdown-trigger] button:focus-visible,
[data-radix-dropdown-trigger] button:active,
[data-radix-dropdown-trigger] button:visited,
[data-radix-dropdown-trigger] button:hover,
button[data-state="closed"],
button[data-state="open"],
button[data-state="closed"]:focus,
button[data-state="open"]:focus,
button[data-state="closed"]:focus-visible,
button[data-state="open"]:focus-visible,
button[data-no-outline="true"],
button[data-no-outline="true"]:focus,
button[data-no-outline="true"]:focus-visible,
button[data-no-outline="true"]:active,
button[data-no-outline="true"]:visited,
button[data-no-outline="true"]:hover {
  outline: none !important;
  border: none !important;
  ring: none !important;
  ring-offset: none !important;
}

/* Allow box-shadow to be set via inline styles */
[data-radix-dropdown-trigger] button[style*="box-shadow"] {
  box-shadow: inherit !important;
}

/* Override box-shadow for CSV selector buttons to show 3D effects */
.csv-button-override {
  box-shadow: initial !important;
}

/* Specific shadow overrides for CSV selector pressed state */
.csv-button-pressed {
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.2), inset 0 1px 2px rgba(255,255,255,0.1) !important;
}

/* Higher specificity overrides to ensure shadows work */
button.csv-button-override {
  box-shadow: initial !important;
}

button.csv-button-override.csv-button-pressed {
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.2), inset 0 1px 2px rgba(255,255,255,0.1) !important;
}

/* Even higher specificity for dropdown trigger buttons */
[data-radix-dropdown-trigger] button.csv-button-override {
  box-shadow: initial !important;
}

[data-radix-dropdown-trigger] button.csv-button-override.csv-button-pressed {
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.2), inset 0 1px 2px rgba(255,255,255,0.1) !important;
}

/* Disable hover effects on CSV selector and settings buttons */
button.no-hover:hover {
  background-color: transparent !important;
  background: transparent !important;
}

/* Disable hover effects on ghost variant buttons */
button[data-variant="ghost"]:hover {
  background-color: transparent !important;
  background: transparent !important;
}

/* Simple no-hover class to disable all hover effects */
.no-hover:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: inherit !important;
}

/* Prevent icon color changes on hover */
.no-hover:hover svg {
  color: inherit !important;
}

.no-hover:hover * {
  color: inherit !important;
}

/* More specific rules for the button icons */
button.no-hover:hover svg {
  color: inherit !important;
}

button.no-hover:hover .h-5.w-5 {
  color: inherit !important;
}

/* CSV Selector Ultra-Modern Button Effects */

/* Specific shadow override for pressed state */
.csv-button-pressed {
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.2), inset 0 1px 2px rgba(255,255,255,0.1) !important;
}

/* Specific rules for CSV selector icon effects */
.csv-icon-pressed {
  transform: scale(0.95) !important;
}

.csv-icon-normal {
  transform: scale(1) !important;
}

/* Ensure background colors work */
.csv-bg-pressed {
  background-color: rgba(243, 244, 246, 0.5) !important;
}

.csv-bg-pressed-dark {
  background-color: rgba(31, 41, 55, 0.5) !important;
}

/* Override any conflicting hover effects */
[data-radix-dropdown-trigger] button.no-hover:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
}

[data-radix-dropdown-trigger] button.no-hover:hover svg {
  color: hsl(var(--muted-foreground)) !important;
}

/* Override any conflicting hover effects for popover triggers (settings menu) */
[data-radix-popover-trigger] button.no-hover:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
}

[data-radix-popover-trigger] button.no-hover:hover svg {
  color: hsl(var(--muted-foreground)) !important;
}

/* Additional specific rules for CSV selector */
button.no-hover:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: inherit !important;
  transform: none !important;
  box-shadow: none !important;
}

button.no-hover:hover svg {
  color: inherit !important;
  transform: none !important;
  filter: none !important;
}

/* Force disable hover on ghost variant buttons */
button[data-variant="ghost"].no-hover:hover,
button.no-hover[data-variant="ghost"]:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
}

button[data-variant="ghost"].no-hover:hover svg,
button.no-hover[data-variant="ghost"]:hover svg {
  color: hsl(var(--muted-foreground)) !important;
  transform: none !important;
  filter: none !important;
}

/* Force disable hover on CSV selector and settings buttons */
.csv-selector-button:hover,
.settings-selector-button:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
  transform: none !important;
  box-shadow: none !important;
}

.csv-selector-button:hover svg,
.settings-selector-button:hover svg {
  color: hsl(var(--muted-foreground)) !important;
  transform: none !important;
  filter: none !important;
}

/* Maximum specificity to override any hover effects */
button[class*="csv-selector-button"]:hover,
button[class*="settings-selector-button"]:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
  transform: none !important;
  box-shadow: none !important;
}

button[class*="csv-selector-button"]:hover svg,
button[class*="settings-selector-button"]:hover svg {
  color: hsl(var(--muted-foreground)) !important;
  transform: none !important;
  filter: none !important;
}

/* Override any Radix UI hover effects */
[data-radix-dropdown-trigger] button:hover,
[data-radix-popover-trigger] button:hover {
  background-color: transparent !important;
  background: transparent !important;
  color: hsl(var(--muted-foreground)) !important;
}

[data-radix-dropdown-trigger] button:hover svg,
[data-radix-popover-trigger] button:hover svg {
  color: hsl(var(--muted-foreground)) !important;
  transform: none !important;
  filter: none !important;
}

/* Force settings button animation to work */
.settings-selector-button svg {
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

/* Ensure settings button transform and filter work when open */
[data-radix-popover-trigger] .settings-selector-button svg {
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

/* Debug: Force settings button animation with maximum specificity */
[data-radix-popover-trigger] button.settings-selector-button svg {
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
  will-change: transform, filter !important;
}

/* Override any conflicting transform rules */
[data-radix-popover-trigger] button.settings-selector-button svg[style*="transform"] {
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

/* Debug: Add visible red background when settings is open to test state */
[data-radix-popover-trigger] button.settings-selector-button[style*="background"] {
  background-color: red !important;
}

/* Force settings button to work with maximum specificity */
button.settings-selector-button[style] {
  background-color: var(--background-color) !important;
  box-shadow: var(--box-shadow) !important;
}

button.settings-selector-button[style] svg {
  transform: var(--transform) !important;
  filter: var(--filter) !important;
}

button.settings-selector-button[data-state="open"] svg,
[data-radix-popover-trigger] button.settings-selector-button[data-state="open"] svg {
  transform: scale(0.95) !important;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1)) !important;
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

/* Alternative approach: target by attribute */
button[class*="settings-selector-button"] svg {
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

button[class*="settings-selector-button"][data-state="open"] svg,
button[class*="settings-selector-button"][aria-expanded="true"] svg {
  transform: scale(0.95) !important;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1)) !important;
}

/* Target by data-settings-open attribute */
button[data-settings-open="true"] svg {
  transform: scale(0.95) !important;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1)) !important;
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

button[data-settings-open="false"] svg {
  transform: scale(1) !important;
  filter: none !important;
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

/* Ensure all settings buttons have transition */
.settings-selector-button svg {
  transition: transform 0.3s ease-out, filter 0.3s ease-out !important;
}

/* Ensure icon shadows work */
.csv-icon-shadow {
  filter: drop-shadow(inset 0 1px 2px rgba(0,0,0,0.3)) !important;
}

/* Neomorphic Button Styles */
.neomorphic-button {
  position: relative;
  border: none;
  outline: none;
  cursor: pointer;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.neomorphic-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  background: linear-gradient(145deg, rgba(255, 255, 255, 0.1), rgba(0, 0, 0, 0.05));
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.neomorphic-button:hover::before {
  opacity: 1;
}

.neomorphic-button:active::before {
  opacity: 0.5;
}

/* Dark mode adjustments for neomorphic buttons */
@media (prefers-color-scheme: dark) {
  .neomorphic-button {
    box-shadow: 
      8px 8px 16px rgba(0, 0, 0, 0.4),
      -8px -8px 16px rgba(255, 255, 255, 0.05),
      inset 2px 2px 4px rgba(255, 255, 255, 0.1),
      inset -2px -2px 4px rgba(0, 0, 0, 0.2) !important;
  }
  
  .neomorphic-button:active {
    box-shadow: 
      4px 4px 8px rgba(0, 0, 0, 0.5),
      -4px -4px 8px rgba(255, 255, 255, 0.02),
      inset 4px 4px 8px rgba(0, 0, 0, 0.2),
      inset -4px -4px 8px rgba(255, 255, 255, 0.05) !important;
  }
}

/* Light mode adjustments for neomorphic buttons */
@media (prefers-color-scheme: light) {
  .neomorphic-button {
    box-shadow: 
      8px 8px 16px rgba(0, 0, 0, 0.15),
      -8px -8px 16px rgba(255, 255, 255, 0.8),
      inset 2px 2px 4px rgba(255, 255, 255, 0.3),
      inset -2px -2px 4px rgba(0, 0, 0, 0.05) !important;
  }
  
  .neomorphic-button:active {
    box-shadow: 
      4px 4px 8px rgba(0, 0, 0, 0.2),
      -4px -4px 8px rgba(255, 255, 255, 0.6),
      inset 4px 4px 8px rgba(0, 0, 0, 0.05),
      inset -4px -4px 8px rgba(255, 255, 255, 0.2) !important;
  }
}

/* Ultra-modern progress bar animations */
@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes sparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0);
  }
  50% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes progress-glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
  }
  50% {
    box-shadow: 0 0 30px rgba(59, 130, 246, 0.6);
  }
}

@keyframes goal-reached-pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.progress-shimmer {
  animation: shimmer 2s infinite;
}

.progress-sparkle {
  animation: sparkle 1.5s ease-in-out infinite;
}

.progress-glow {
  animation: progress-glow 2s ease-in-out infinite;
}

.goal-reached-pulse {
  animation: goal-reached-pulse 1s ease-in-out infinite;
}

/* Smooth backdrop blur for progress bar */
.progress-backdrop {
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
}

/* Ultra-modern gradient animations */
@keyframes gradient-shift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.gradient-animate {
  background-size: 200% 200%;
  animation: gradient-shift 3s ease infinite;
}



